name: CI - Build and Test

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: 
      - main
      - develop
      - 'feature/**'

jobs:
  backend-test:
    name: Backend Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'maven'
    
    - name: Run backend tests with coverage
      working-directory: ./backend
      run: mvn clean verify
    
    - name: Upload backend coverage report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: backend-coverage-report
        path: backend/target/site/jacoco/
    
    - name: Build backend
      working-directory: ./backend
      run: mvn clean package -DskipTests

  frontend-test:
    name: Frontend Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      working-directory: ./frontend
      run: npm ci --legacy-peer-deps
    
    - name: Run linter
      working-directory: ./frontend
      run: npm run lint
    
    - name: Run frontend tests with coverage
      working-directory: ./frontend
      run: npm test -- --coverage
      # Coverage thresholds defined in jest.config.js: 60% lines, 40% branches, 55% functions, 60% statements
      # Components excluded from coverage until tests are written
    
    - name: Upload frontend coverage report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: frontend-coverage-report
        path: frontend/coverage/
    
    - name: Build frontend
      working-directory: ./frontend
      run: npm run build

  docker-build:
    name: Docker Build Test
    runs-on: ubuntu-latest
    needs: [backend-test, frontend-test]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build backend Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        file: ./backend/Dockerfile
        push: false
        tags: expense-tracker-backend:test
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Build frontend Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./frontend
        file: ./frontend/Dockerfile
        push: false
        tags: expense-tracker-frontend:test
        cache-from: type=gha
        cache-to: type=gha,mode=max
